/*
    Copyright 2018 0kims association.

    This file is part of cusnarks.

    cusnarks is a free software: you can redistribute it and/or
    modify it under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 3 of the License, or (at your option)
    any later version.

    cusnarks is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
    more details.

    You should have received a copy of the GNU General Public License along with
    cusnarks. If not, see <https://www.gnu.org/licenses/>.
*/

// ------------------------------------------------------------------
// Author     : David Ruiz
//
// File name  : constants.cpp
//
// Date       : 5/09/2019
//
// ------------------------------------------------------------------
//
// Description:
//   Definition of constants used in Cusnarks
//
// ------------------------------------------------------------------

#include <stdio.h>
#include <stdlib.h>
#include "types.h"
#include "utils_host.h"
#include "constants.h"

static uint32_t N[] = {
      3632069959, 1008765974, 1752287885, 2541841041, 2172737629, 3092268470, 3778125865,  811880050, // p_group
      4026531841, 1138881939, 2042196113,  674490440, 2172737629, 3092268470, 3778125865,  811880050  // p_field
};

static uint32_t R2[] = {
  1401617033, 4079811675, 3561292283, 3051821329,  172064758, 1202396927, 3401069855,  114859889, //R2 group
  2921426343,  465102405, 3814480355, 1409170097, 1404797061, 2353627965, 2135835813,   35049649  // R2 field
};

static uint32_t NPrime[] = {
  3834012553, 2278688642,  516582089, 2665381221,  406051456, 3635399632, 2441645163, 4118422199, // pp_group
  4026531839, 3269588371, 1281954227, 1703315019, 2567316369, 3818559528,  226705842, 1945644829  // pp_field
};


static uint32_t IScalerExt[] = {
               1,          0,          0,          0,          0,          0,          0,          0,
      4160749569, 2716924617, 1021098056, 2484728868, 1086368814, 3693617883, 1889062932,  405940025,
      4093640705, 4075386926, 1531647084, 3727093302, 3777036869, 1245459528,  686110751,  608910038,
      1912602625,  459650785, 1786921599, 2200791871, 2974887249, 2168863999, 2232118308,  710395044,
      2969567233,  799266362, 4062042504, 1437641155,  426328791,  483082587, 3005122087,  761137547,
      1350565889, 3116557799,  904635660, 1056065798, 3447016858, 1787675528, 1244140328,  786508799,
      2688548865, 4275203517, 1473415886, 3012761767, 2809877243,  292488351,  363649449,  799194425,
      3357540353,  559559080, 3905289648, 1843626103,  343823788, 1692378411, 4218371305,  805537237,
      1544552449, 2996704158,  826259232, 3406541920, 3405764356, 2392323440, 1850764937,  808708644,
       638058497, 4215276697, 1434227672, 4187999828, 2789250992, 2742295955, 2814445401,  810294347,
      2332295169,  529595670, 1738211893,  283761486,  333510663, 2917282213, 1148801985,  811087199,
      1031929857,  834238805, 1890204003,  479125963, 3400607794, 3004775341,  315980277,  811483625,
      2529230849,  986560372, 4113683706, 2724291849,  639189063, 3048521906, 4194536719,  811681837,
      1130397697, 3210204804,  930456261, 1699391145, 1405963346, 3070395188, 1838847644,  811780944,
       430981121, 2174543372, 3633809835, 3334424440, 1789350487,  933848181, 2808486755,  811830497,
        81272833, 1656712656, 2838002974, 2004457440, 4128527706, 2013058325, 1145822662,  811855274,
      4201385985, 3545280945, 2440099543, 3486957588, 1003149019,  405179750, 2461974264,  811867662,
      4113958913, 2342081442, 2241147828, 2080724014, 1587943324, 3896207758, 3120050064,  811873856,
      1922761729, 3887965339, 2141671970, 3525090875, 1880340476, 1346754466, 3449087965,  811876953,
      2974646785,  365939991, 4239417690, 4247274305, 2026539052, 2219511468, 1466123267,  811878502,
      3500589313, 2899894613,  993323253,  313398725, 2099638341, 2655889969, 2622124566,  811879276,
      3763560577, 2019388276, 3665243331,  493944582, 4283671633,  726595571, 3200125216,  811879663,
      1747562561, 1579135108, 2853719722,  584217511, 1080720983, 4056915669, 1341641892,  811879857,
       739563553, 3506492172,  300474269,  629353976, 3774212954, 1427108421,  412400231,  811879954,
       235564049, 2322687056, 1171335191, 2799405856,  825991643, 2259688446, 2095263048,  811880002,
      4278531593, 1730784497, 1606765652, 1736948148, 1499364636,  528494810, 2936694457,  811880026,
      4152531717, 3582316866, 1824480882, 3353202942, 1836051132, 1810381640, 3357410161,  811880038,
      1942048131,  213115755, 1933338498, 4161330339, 2004394380, 2451325055, 3567768013,  811880044,
      2984289986, 2823482495, 4135250953,  270426741, 4236049653, 2771796762, 3672946939,  811880047
};

static uint32_t IScalerMont[] = {
    1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,  // 2^0 
     536870910, 2017203416,  210575069, 2945986415, 4244459333, 2405397650, 1033682860,  523723546,  // 2^1
     268435455, 3156085356, 2252771182, 3620476855, 2122229666, 1202698825,  516841430,  261861773,  // 2^2
             0,          0,          0,          0,          0,          0,          0,  536870912,  // 2^3
             0,          0,          0,          0,          0,          0,          0,  268435456,  // 2^4
             0,          0,          0,          0,          0,          0,          0,  134217728,  // 2^5
             0,          0,          0,          0,          0,          0,          0,   67108864,  // 2^6
             0,          0,          0,          0,          0,          0,          0,   33554432,  // 2^7
             0,          0,          0,          0,          0,          0,          0,   16777216,  // 2^8
             0,          0,          0,          0,          0,          0,          0,    8388608,  // 2^9
             0,          0,          0,          0,          0,          0,          0,    4194304,  // 2^10
             0,          0,          0,          0,          0,          0,          0,    2097152,  // 2^11
             0,          0,          0,          0,          0,          0,          0,    1048576,  // 2^12
             0,          0,          0,          0,          0,          0,          0,     524288,  // 2^13
             0,          0,          0,          0,          0,          0,          0,     262144,  // 2^14
             0,          0,          0,          0,          0,          0,          0,     131072,  // 2^15
             0,          0,          0,          0,          0,          0,          0,      65536,  // 2^16
             0,          0,          0,          0,          0,          0,          0,      32768,  // 2^17
             0,          0,          0,          0,          0,          0,          0,      16384,  // 2^18
             0,          0,          0,          0,          0,          0,          0,       8192,  // 2^19
             0,          0,          0,          0,          0,          0,          0,       4096,  // 2^20
             0,          0,          0,          0,          0,          0,          0,       2048,  // 2^21
             0,          0,          0,          0,          0,          0,          0,       1024,  // 2^22
             0,          0,          0,          0,          0,          0,          0,        512,  // 2^23
             0,          0,          0,          0,          0,          0,          0,        256,  // 2^24
             0,          0,          0,          0,          0,          0,          0,        128,  // 2^25
             0,          0,          0,          0,          0,          0,          0,         64,  // 2^26
             0,          0,          0,          0,          0,          0,          0,         32,  // 2^27
             0,          0,          0,          0,          0,          0,          0,         16   // 2^28
};

static const uint32_t Zero[] = {0,0,0,0,0,0,0,0};
static const uint32_t One[]  = {1,0,0,0,0,0,0,0};
static const uint32_t OneMont[] = {
         3314486685, 3546104717, 4123462461,  175696680, 2021213740, 1718526831, 2584207151,  235567041,    // 1 group
         1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,   // 1 field
};


// Group
//  p1 = 21888242871839275222246405745257275088696311157297823662689037894645226208583L
//  res = 21888242871839275222246405745257275088696311157297823662689037894645226208582L
// 'Pp': 111032442853175714102588374283752698368366046808579839647964533820976443843465L,
// 'R': 115792089237316195423570985008687907853269984665640564039457584007913129639936L,
// 'R3modP': 14921786541159648185948152738563080959093619838510245177710943249661917737183L,
// 'Rbitlen': 256,
// 'Rmask': 115792089237316195423570985008687907853269984665640564039457584007913129639935L,
// 'RmodP': 6350874878119819312338956282401532409788428879151445726012394534686998597021L,
// 'Rp': 20988524275117001072002809824448087578619730785600314334253784976379291040311


// Field
//p2 = 21888242871839275222246405745257275088548364400416034343698204186575808495617L
//red = 21888242871839275222246405745257275088548364400416034343698204186575808495616L
// 'Pp': 52454480824480482120356829342366457550537710351690908576382634413609933864959L,
// 'R': 115792089237316195423570985008687907853269984665640564039457584007913129639936L,
// 'R3modP': 5866548545943845227489894872040244720403868105578784105281690076696998248512L,
// 'Rbitlen': 256,
// 'Rmask': 115792089237316195423570985008687907853269984665640564039457584007913129639935L,
// 'RmodP': 6350874878119819312338956282401532410528162663560392320966563075034087161851L,
// 'Rp': 9915499612839321149637521777990102151350674507940716049588462388200839649614L}


static uint32_t mod_info_init[] = {
        3632069959, 1008765974, 1752287885, 2541841041, 2172737629, 3092268470, 3778125865,  811880050, // p_group
        3834012553, 2278688642,  516582089, 2665381221,  406051456, 3635399632, 2441645163, 4118422199, // pp_group
        21690935,   3984885834,   41479672, 3944751749, 3074724569, 3479431631, 1508230713,  778507633, // rp_group
        317583274, 1757628553, 1923792719, 2366144360,  151523889, 1373741639, 1193918714,  576313009,  // nonres_group (reduced)
        3658821855, 2983030191, 2804432310, 1660031206,  182061819, 4018080524,  760816964,  553479824,  // R2modp (reduced)
        1401617033, 4079811675, 3561292283, 3051821329,  172064758, 1202396927, 3401069855,  114859889, //R2 group

        4026531841, 1138881939, 2042196113,  674490440, 2172737629, 3092268470, 3778125865,  811880050, // p_field
        4026531839, 3269588371, 1281954227, 1703315019, 2567316369, 3818559528,  226705842, 1945644829, // pp_field
        1840322894, 3696992261, 3776048263,  151975337, 2931318109, 3357937124, 2193970460,  367786321, // rp_field
        2684354566, 2538324343, 3663242087, 4046942642,  151523886, 1373741639, 1193918714,  576313009, // nonres_field (reduced)
        3032416320, 1586813153,  486258360,  709401790, 2711605229, 2302461540, 2144101756,  217602379,  // R2modp (reduced)
        2921426343,  465102405, 3814480355, 1409170097, 1404797061, 2353627965, 2135835813,   35049649  // R2 field
        
};



// EC BN128 curve and params definition
// Y^2 = X^3 + b
// b = 3
// Generator point G =(Gx, Gy) = (1,2)
// Generator point G2 ([Gx1, Gx2], [Gy1, Gy2])
//       'G1x' : 10857046999023057135944570762232829481370756359578518086990519993285655852781L,
//       'G2x' : 8495653923123431417604973247489272438418190587263600148770280649306958101930L,
//       'G1y' : 11559732032986387107991004021392285783925812861821192530917403151452391805634L,
//       'G2y' : 4082367875863433681332203403145435568316851327593401208105741076214120093531L
//
// Assumption is that we are woking in Mongtgomery domain, so I need to transforms all these parameters
// Also, these parameters will vary depending on prime number used. 

// There are two different set of primes (MOD_N)


// Group prime
// b = 19052624634359457937016868847204597229365286637454337178037183604060995791063L
// Gx = 6350874878119819312338956282401532409788428879151445726012394534686998597021L
// Gy = 12701749756239638624677912564803064819576857758302891452024789069373997194042L
// G2x[0] = 11461925177900819176832270005713103520318409907105193817603008068482420711462L
// G2x[1] = 18540402224736191443939503902445128293982106376239432540843647066670759668214L
// G2y[0] = 9496696083199853777875401760424613833161720860855390556979200160215841136960L
// G2y[1] = 6170940445994484564222204938066213705353407449799250191249554538140978927342L

// Field prime
// b = 19052624634359457937016868847204597231584487990681176962899689225102261485553L
// Gx = 6350874878119819312338956282401532410528162663560392320966563075034087161851L
// Gy = 12701749756239638624677912564803064821056325327120784641933126150068174323702L
// G2x[0] = 3440318644824060289325407041038137137632482455953552081609447686580196514077L
// G2x[1] = 15555376658169732961166172612384867299105908138835914639331977638675822381717L
// G2y[0] = 1734729704421626988316384622007148076088981578411341419187802115428207738199L
// G2y[1] = 7947406416180328355183476715314321281876370016171195924215639649670494139363L 

static uint32_t ecbn128_params_init [] = {
    1353525463, 2048379561, 3780452793,  527090042, 1768673924,  860613198, 3457654158,  706701124,   // b_group
    3314486685, 3546104717, 4123462461,  175696680, 2021213740, 1718526831, 2584207151,  235567041,   // Gx_group
    2334006074, 2797242139, 3951957627,  351393361, 4042427480, 3437053662,  873447006,  471134083,   // Gy group
      45883430, 2390996433, 1232798066, 3706394933, 2541820639, 4223149639, 2945863739,  425146433,   // G2x[0] group
    2288773622, 1637743261, 4120812408, 4269789847,  589004286, 4288551522, 2929607174,  687701739,   // G2x[1] group
    2823577920, 2947838845, 1476581572, 1615060314, 1386229638,  166285564,  988445547,  352252035,   // G2y[0] group
    3340261102, 1678334806,  847068347, 3696752930,  859115638, 1442395582, 2482857090,  228892902,   // G2y[1] group

    4026531825,   96640084, 3726796669, 2767545280, 1768673930,  860613198, 3457654158,  706701124,  // b field
    1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,  // Gx field
    2684354550, 1496082488, 1052875347, 1845030187, 4042427484, 3437053662,  873447006,  471134083,  // Gy field
    3570833693,  985424601, 3020216734, 2567113431,  703417746, 1422701227, 3337448090,  127608510,  // G2x[0] field
    1354730133, 2060109890, 3374016652, 3251713708,  786468672, 1666612222, 3296074718,  576980987,  // G2x[1] field
    2182790487,  762510808, 2006819228, 3200553925, 2281110735, 3404365023, 3840597178,   64344700,  // G2y[0] field
     939242467, 1534311190, 2907306748, 1573550191,  646343074, 2690260169, 2616010917,  294785687   // G2y[1] field
};


// group
// 1 => 6350874878119819312338956282401532409788428879151445726012394534686998597021L
// 2 => 12701749756239638624677912564803064819576857758302891452024789069373997194042L
// 3 => 19052624634359457937016868847204597229365286637454337178037183604060995791063L
// 4 => 3515256640640002027109419384348854550457404359307959241360540244102768179501L
// 8 => 7030513281280004054218838768697709100914808718615918482721080488205536359002L
// 12 (4b) => 10545769921920006081328258153046563651372213077923877724081620732308304538503L
// 24 (8b)=> 21091539843840012162656516306093127302744426155847755448163241464616609077006L
// field
// 1 => 6350874878119819312338956282401532410528162663560392320966563075034087161851L
// 2 => 12701749756239638624677912564803064821056325327120784641933126150068174323702L
// 3 => 19052624634359457937016868847204597231584487990681176962899689225102261485553L
// 4 =>  3515256640640002027109419384348854553564286253825534940168048113560540151787L
// 8 => 7030513281280004054218838768697709107128572507651069880336096227121080303574L
// 12 (4b) => 10545769921920006081328258153046563660692858761476604820504144340681620455361L
// 24 (8b) => 21091539843840012162656516306093127321385717522953209641008288681363240910722L

static uint32_t misc_const_init[] = {
         3314486685, 3546104717, 4123462461,  175696680, 2021213740, 1718526831, 2584207151,  235567041,    // 1 group
                  0,          0,          0,          0,          0,          0,          0,          0,

                  0,          0,          0,          0,          0,          0,          0,          0,
         3314486685, 3546104717, 4123462461,  175696680, 2021213740, 1718526831, 2584207151,  235567041,    // inf group
                  0,          0,          0,          0,          0,          0,          0,          0,

                  0,          0,          0,          0,          0,          0,          0,          0,
                  0,          0,          0,          0,          0,          0,          0,          0,
         3314486685, 3546104717, 4123462461,  175696680, 2021213740, 1718526831, 2584207151,  235567041,    // inf2 group
                  0,          0,          0,          0,          0,          0,          0,          0,
                  0,          0,          0,          0,          0,          0,          0,          0,
                  0,          0,          0,          0,          0,          0,          0,          0,

         1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,   // 1 field
                  0,          0,          0,          0,          0,          0,          0,          0,

                  0,          0,          0,          0,          0,          0,          0,          0,    
         1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,   // inf
                  0,          0,          0,          0,          0,          0,          0,          0,    

                  0,          0,          0,          0,          0,          0,          0,          0,    
                  0,          0,          0,          0,          0,          0,          0,          0,    
         1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831, 2584207151,  235567041,   // inf2
                  0,          0,          0,          0,          0,          0,          0,          0,    
                  0,          0,          0,          0,          0,          0,          0,          0,    
                  0,          0,          0,          0,          0,          0,          0,          0    
};

static char roots_1M_filename[]="../../data/zpoly_roots_1M.bin";
// 32 roots of unitity of field prime (only first 16)
static uint32_t W32_roots[32*NWORDS_256BIT];
// 32 inverse roots of unitity of field prime (only first 16)
static uint32_t IW32_roots[32*NWORDS_256BIT];

// During IFFT, I need to scale by inv(32). Below is the representation of 32 in Mongtgomery
//2 : 14119558874979547267292681013829403749538263531988213332332383630804947828734L
//4 : 7059779437489773633646340506914701874769131765994106666166191815402473914367L
//8 : 14474011154664524427946373126085988481658748083205070504932198000989141204992L
//16: 7237005577332262213973186563042994240829374041602535252466099000494570602496L
//32: 3618502788666131106986593281521497120414687020801267626233049500247285301248L => in 256 is (1 << 251 )
//1024 : 113078212145816597093331040047546785012958969400039613319782796882727665664L
//1024^2 : 110427941548649020598956093796432407239217743554726184882600387580788736L

static uint32_t IW32_nroots[] = { 
    536870910, 2017203416,  210575069, 2945986415, 4244459333, 2405397650, 1033682860,  523723546,   // inv 2
    268435455, 3156085356, 2252771182, 3620476855, 2122229666, 1202698825,  516841430,  261861773,   // inv 4
            0,          0,          0,          0,          0,          0,          0,  0x20000000,   // inv 8             
            0,          0,          0,          0,          0,          0,          0,  0x10000000,   // inv 16
            0,          0,          0,          0,          0,          0,          0,  0x08000000,   // inv 32
            0,          0,          0,          0,          0,          0,          0,  4194304,       // inv 1024
            0,          0,          0,          0,          0,          0,          0,  4096         // inv 1024**2
};   


static uint32_t proots_field[] = {
1342177275, 2895524892, 2673921321,  922515093, 2021213742, 1718526831 , 2584207151,  235567041,
2684354566, 2538324343, 3663242087, 4046942642,  151523886, 1373741639 , 1193918714,  576313009,
2665279371, 2138389911, 2974257440, 1597970220, 1946774638, 2377212537 ,  968952015,  725056309,
3048045631, 4172106466, 2211153342,  761317119, 1569991159, 3648453931 , 1067112873 , 608206055,
1949273859, 4105600380, 1674602700, 1746611676,  469456746, 2363866351 , 3535158526,  377235793,
3210169444,  571799473, 4147215858,  687416111, 2964157901, 3849684136 , 3692522755,  729938777,
2173657535, 2391802853, 2616786626, 2359017268, 1057051470, 1406987981 , 3844713020,  647009899,
 646020017,  175752240, 2572385776, 2075315324,   37873374, 3066701781 ,  909307980,    8041279,
2208451276, 2729424959, 1381847918, 2465355225 ,  42392857, 1584752136 , 3308070217,  410759590,
 581182430, 2622700519, 2095017485, 1680514322, 1083883525,  230454598 , 2990362754,   15748237,
 671879556,  519353268, 2925406764, 3480933570, 3315819800, 3087416172 , 1709162636,  591971513,
2924466098, 1223106953, 2381863431,  168033084, 3936038410, 4283271733 , 3449560439,  682200110,
3018644435,  500453935, 3495293869, 1747069587, 3017102824, 3197926758 , 1637152838,  462616248,
2040549078, 2303515838, 1154680711, 2506940010, 3621503327, 1503770155 , 2592108366,  317449232,
1292233400, 3121848519,  296431894,  771841379, 2359664730, 3036910124 , 4276327642,  113120727,
1543354452, 2152658693, 1087302386, 2057792369, 3003025867, 4241054312 , 4056155847,  491134005,
 960066611, 1202972505,  219948241, 1832532626, 1962368835, 2704544337 , 3999978838,  461512449,
 302308476, 3657808088,  103845185, 1211247334, 2224982316 , 892702247 , 3593328018,   68143867,
 158337924,  627492399, 2696906336,  857225846, 1464883441, 3644428121 ,  970050868,   91041486,
3869407798,   77505463,   88005564, 4025214467 , 986619604, 2216997978 , 2793961822,  679248784,
2861404954, 3660764261, 1635815324,  644478597, 3838357637,  612084550 , 2178286106,  221996679,
4113706812,  669655442, 1703930279, 2971174121, 2689843305,  981869500 ,  635517350,  311423984,
3169786610, 2609783406, 3745540960, 2655383979, 3584539453, 1401803351 , 2021827516,  171479811,
3231617280, 1850221572, 1493181874,  225808839,  979287569, 2751604601 , 3249097896,   23373507,
3629109296, 3340942697, 3478263340, 1611549222, 1173596137, 4218584791 , 1778067292,  374515634,
1465649122, 1074723583, 1267702469, 1428386633, 2179444023, 2860100589 ,  139275833,  449242552,
3381272830, 2695009314, 1704156317, 1943298762, 3561325303, 3787082350 ,  205161142,  687609024,
2156462695, 2270782484, 3837789001, 1245345973, 1386656126, 1224757213 , 1709632018,  675616733,
2161196444, 1668182869,  608567254, 2720789364,  514982872, 1447373504 ,  694417895,  409005972

};

const uint32_t * CusnarksPGet(mod_t type)
{
  return &N[NWORDS_256BIT*type];
}
const uint32_t * CusnarksR2Get(mod_t type)
{
  return &R2[NWORDS_256BIT*type];
}
const uint32_t * CusnarksNPGet(mod_t type)
{
  return &NPrime[NWORDS_256BIT*type];
}

const uint32_t * CusnarksIScalerGet(fmt_t type)
{
  if (type == FMT_EXT) {
    return IScalerExt;
  } else if (type == FMT_MONT){
    return IScalerMont;
  }
}

const uint32_t * CusnarksZeroGet(void)
{
  return Zero;
}
const uint32_t * CusnarksOneGet(void)
{
  return One;
}
const uint32_t * CusnarksOneMontGet(uint32_t pidx)
{
  return &OneMont[pidx*NWORDS_256BIT];
}

const uint32_t * CusnarksEcbn128ParamsGet(void)
{
  return ecbn128_params_init;
}

const uint32_t * CusnarksModInfoGet(void)
{
  return mod_info_init;
}
const uint32_t * CusnarksMiscKGet(void)
{
  return misc_const_init;
}
const uint32_t * CusnarksW32RootsGet(void)
{
  readU256DataFile_h(W32_roots,roots_1M_filename,1<<20,32);
  return W32_roots;
}
const uint32_t * CusnarksIW32RootsGet(void)
{
  uint32_t i;
  readU256DataFile_h(IW32_roots,roots_1M_filename,1<<20,32);
  computeIRoots_h(IW32_roots, IW32_roots, 32);
  return IW32_roots;
}
const uint32_t * CusnarksIW32NRootsGet(void)
{
  return IW32_nroots;
}

const uint32_t *CusnarksPrimitiveRootsFieldGet(uint32_t nbits)
{
  return &proots_field[nbits*NWORDS_256BIT];
}

